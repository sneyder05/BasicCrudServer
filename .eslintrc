{
  "env": {
    "es6": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/eslint-recommended"
  ],
  "rules": {
    // Disabled
    "comma-spacing": "off",
    "func-call-spacing": "off",
    "no-empty-function": "off",
    "no-extra-semi": "off",
    "no-extra-parens": "off",
    "no-unused-expressions": "off",
    "no-useless-constructor": "off",
    "brace-style": "off",
    "quotes": "off",
    "indent": "off",
    // Apply genereic rules
    "max-len": [
      "warn",
      {
        "code": 120
      }
    ],
    "no-useless-catch": "off",
    "default-case": "error",
    "spaced-comment": [
      "error",
      "always",
      {
        "markers": ["/"]
      }
    ],
    "comma-dangle": ["error", "never"],
    "no-lonely-if": "error",
    "no-mixed-spaces-and-tabs": "error",
    "no-trailing-spaces": "error",
    "no-whitespace-before-property": "error",
    "array-callback-return": "error",
    "block-scoped-var": "error",
    "curly": "error",
    "default-case-last": "error",
    "no-alert": "error",
    "no-case-declarations": "error",
    "no-constructor-return": "error",
    "no-empty-pattern": "error",
    "no-eq-null": "error",
    "no-eval": "error",
    "no-extra-label": "error",
    "no-fallthrough": "error",
    "no-floating-decimal": "error",
    "no-global-assign": "error",
    "no-implicit-coercion": "error",
    "no-implied-eval": "error",
    "no-iterator": "error",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-loop-func": "error",
    "no-multi-spaces": "error",
    "no-multi-str": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-wrappers": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-proto": "error",
    "no-redeclare": "error",
    "no-return-assign": "error",
    "no-return-await": "error",
    "no-self-compare": "error",
    "no-throw-literal": "error",
    "no-bitwise": "error",
    "no-array-constructor": "error",
    "no-mixed-operators": "warn",
    "no-multi-assign": "error",
    "semi-spacing": "error",
    "space-infix-ops": "error",
    "space-before-blocks": "error",
    "arrow-parens": ["error", "as-needed"],
    "arrow-spacing": "error",
    "no-confusing-arrow": "error",
    "no-duplicate-imports": "error",
    "object-curly-spacing": ["error", "always"],
    "array-bracket-spacing": ["error", "always"],
    "dot-location": ["error", "property"],
    "max-statements": ["error", 50],
    "key-spacing": [
      "error", {
        "beforeColon": false
      }
    ],
    "keyword-spacing": [
      "error",
      {
        "before": true
      }
    ],
    "dot-notation": [
      "error",
      {
        "allowKeywords": false
      }
    ],
    "consistent-return": [
      "error",
      {
        "treatUndefinedAsUnspecified": false
      }
    ],
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1, "maxEOF": 0
      }
    ],
    "object-property-newline": [
      "error",
      {
        "allowAllPropertiesOnSameLine": true
      }
    ],
    // Apply TS rules
    "@typescript-eslint/comma-spacing": ["error"],
    "@typescript-eslint/func-call-spacing": ["error"],
    "@typescript-eslint/no-empty-function": ["error"],
    "@typescript-eslint/no-extra-semi": ["error"],
    "@typescript-eslint/no-extra-parens": ["error"],
    "@typescript-eslint/no-unused-expressions": ["error"],
    "@typescript-eslint/no-useless-constructor": ["error"],
    "@typescript-eslint/brace-style": ["error"],
    "@typescript-eslint/quotes": ["error", "single", { "allowTemplateLiterals": true }],
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variableLike",
        "format": ["camelCase", "PascalCase", "UPPER_CASE"]
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "memberLike",
        "modifiers": ["private"],
        "format": ["camelCase", "UPPER_CASE"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "interface",
        "format": ["PascalCase"]
      },
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "should", "has", "can", "did", "will"]
      },
      {
        "selector": "parameterProperty",
        "format": ["strictCamelCase"],
        "types": ["boolean"],
        "custom": {
          "regex": "^(is|should|has|can|did|will)[A-Z]",
          "match": true
        },
        "filter": {
          "regex": "^(transient|synchronize)$",
          "match": false
        }
      },
      {
        "selector": "parameter",
        "format": ["strictCamelCase"],
        "types": ["boolean"],
        "custom": {
          "regex": "^(is|should|has|can|did|will)[A-Z]",
          "match": true
        }
      },
      {
        "selector": "typeParameter",
        "format": ["PascalCase"],
        "prefix": ["T"]
      }
    ],
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "comma",
          "requireLast": false
        },
        "singleline": {
          "delimiter": "comma",
          "requireLast": false
        }
      }
    ],
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": false
      }
    ],
    "@typescript-eslint/no-explicit-any": [
      "warn",
      {
        "ignoreRestArgs": true
      }
    ],
    "@typescript-eslint/no-this-alias": [
      "error",
      {
        "allowDestructuring": true,
        "allowedNames": ["self"]
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "args": "after-used",
        "ignoreRestSiblings": false
      }
    ]
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": ["error"],
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          { "overrides": { "constructors": "no-public" } }
        ]
      }
    }
  ]
}